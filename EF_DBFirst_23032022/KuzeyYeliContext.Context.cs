//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EF_DBFirst_23032022
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class KuzeyYeliEntities : DbContext
    {
        public KuzeyYeliEntities()
            : base("name=KuzeyYeliEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Bolge> Bolges { get; set; }
        public virtual DbSet<Bolgeler> Bolgelers { get; set; }
        public virtual DbSet<Hesap> Hesaps { get; set; }
        public virtual DbSet<Kategoriler> Kategorilers { get; set; }
        public virtual DbSet<MusteriDemographic> MusteriDemographics { get; set; }
        public virtual DbSet<Musteriler> Musterilers { get; set; }
        public virtual DbSet<Nakliyeciler> Nakliyecilers { get; set; }
        public virtual DbSet<Personel> Personels { get; set; }
        public virtual DbSet<Personeller> Personellers { get; set; }
        public virtual DbSet<SatisDetay> SatisDetays { get; set; }
        public virtual DbSet<Satislar> Satislars { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<Tedarikciler> Tedarikcilers { get; set; }
        public virtual DbSet<Urunler> Urunlers { get; set; }
        public virtual DbSet<SatisRaporu> SatisRaporus { get; set; }
        public virtual DbSet<UrunRaporu> UrunRaporus { get; set; }
    
        [DbFunction("KuzeyYeliEntities", "fnc_Personel")]
        public virtual IQueryable<fnc_Personel_Result> fnc_Personel()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fnc_Personel_Result>("[KuzeyYeliEntities].[fnc_Personel]()");
        }
    
        public virtual int HavaleYap(Nullable<int> aliciid, Nullable<int> gonderenid, Nullable<decimal> tutar)
        {
            var aliciidParameter = aliciid.HasValue ?
                new ObjectParameter("aliciid", aliciid) :
                new ObjectParameter("aliciid", typeof(int));
    
            var gonderenidParameter = gonderenid.HasValue ?
                new ObjectParameter("gonderenid", gonderenid) :
                new ObjectParameter("gonderenid", typeof(int));
    
            var tutarParameter = tutar.HasValue ?
                new ObjectParameter("tutar", tutar) :
                new ObjectParameter("tutar", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HavaleYap", aliciidParameter, gonderenidParameter, tutarParameter);
        }
    
        [DbFunction("KuzeyYeliEntities", "KategoriAdaGoreUrunler")]
        public virtual IQueryable<KategoriAdaGoreUrunler_Result> KategoriAdaGoreUrunler(string katad)
        {
            var katadParameter = katad != null ?
                new ObjectParameter("katad", katad) :
                new ObjectParameter("katad", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<KategoriAdaGoreUrunler_Result>("[KuzeyYeliEntities].[KategoriAdaGoreUrunler](@katad)", katadParameter);
        }
    
        [DbFunction("KuzeyYeliEntities", "KategoriIDGoreUrunler")]
        public virtual IQueryable<KategoriIDGoreUrunler_Result> KategoriIDGoreUrunler(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<KategoriIDGoreUrunler_Result>("[KuzeyYeliEntities].[KategoriIDGoreUrunler](@id)", idParameter);
        }
    
        public virtual int KategorilerEkle(string kategoriad)
        {
            var kategoriadParameter = kategoriad != null ?
                new ObjectParameter("kategoriad", kategoriad) :
                new ObjectParameter("kategoriad", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("KategorilerEkle", kategoriadParameter);
        }
    
        public virtual int KategorilerGuncelle(Nullable<int> id, string ad, string tanim)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var adParameter = ad != null ?
                new ObjectParameter("ad", ad) :
                new ObjectParameter("ad", typeof(string));
    
            var tanimParameter = tanim != null ?
                new ObjectParameter("tanim", tanim) :
                new ObjectParameter("tanim", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("KategorilerGuncelle", idParameter, adParameter, tanimParameter);
        }
    
        public virtual ObjectResult<KategorilerListele_Result> KategorilerListele()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KategorilerListele_Result>("KategorilerListele");
        }
    
        public virtual int KategorilerSil(Nullable<int> katid)
        {
            var katidParameter = katid.HasValue ?
                new ObjectParameter("katid", katid) :
                new ObjectParameter("katid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("KategorilerSil", katidParameter);
        }
    
        public virtual int KontrolluUrunEkle(string urunad, Nullable<decimal> fiyat, Nullable<short> stok)
        {
            var urunadParameter = urunad != null ?
                new ObjectParameter("urunad", urunad) :
                new ObjectParameter("urunad", typeof(string));
    
            var fiyatParameter = fiyat.HasValue ?
                new ObjectParameter("fiyat", fiyat) :
                new ObjectParameter("fiyat", typeof(decimal));
    
            var stokParameter = stok.HasValue ?
                new ObjectParameter("stok", stok) :
                new ObjectParameter("stok", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("KontrolluUrunEkle", urunadParameter, fiyatParameter, stokParameter);
        }
    
        public virtual int PersonelEkle(string soyadi, string adi, Nullable<System.DateTime> dogumtarihi, string adres)
        {
            var soyadiParameter = soyadi != null ?
                new ObjectParameter("soyadi", soyadi) :
                new ObjectParameter("soyadi", typeof(string));
    
            var adiParameter = adi != null ?
                new ObjectParameter("adi", adi) :
                new ObjectParameter("adi", typeof(string));
    
            var dogumtarihiParameter = dogumtarihi.HasValue ?
                new ObjectParameter("dogumtarihi", dogumtarihi) :
                new ObjectParameter("dogumtarihi", typeof(System.DateTime));
    
            var adresParameter = adres != null ?
                new ObjectParameter("adres", adres) :
                new ObjectParameter("adres", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PersonelEkle", soyadiParameter, adiParameter, dogumtarihiParameter, adresParameter);
        }
    
        public virtual int SatilanUrunuStokAzalt(Nullable<int> urunid, Nullable<decimal> fiyat, Nullable<short> adet)
        {
            var urunidParameter = urunid.HasValue ?
                new ObjectParameter("urunid", urunid) :
                new ObjectParameter("urunid", typeof(int));
    
            var fiyatParameter = fiyat.HasValue ?
                new ObjectParameter("fiyat", fiyat) :
                new ObjectParameter("fiyat", typeof(decimal));
    
            var adetParameter = adet.HasValue ?
                new ObjectParameter("adet", adet) :
                new ObjectParameter("adet", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SatilanUrunuStokAzalt", urunidParameter, fiyatParameter, adetParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<TedarikcilerListele_Result> TedarikcilerListele()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TedarikcilerListele_Result>("TedarikcilerListele");
        }
    
        public virtual int TrimliUrunEkle(string urunad, Nullable<decimal> fiyat, Nullable<short> stok)
        {
            var urunadParameter = urunad != null ?
                new ObjectParameter("urunad", urunad) :
                new ObjectParameter("urunad", typeof(string));
    
            var fiyatParameter = fiyat.HasValue ?
                new ObjectParameter("fiyat", fiyat) :
                new ObjectParameter("fiyat", typeof(decimal));
    
            var stokParameter = stok.HasValue ?
                new ObjectParameter("stok", stok) :
                new ObjectParameter("stok", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TrimliUrunEkle", urunadParameter, fiyatParameter, stokParameter);
        }
    
        [DbFunction("KuzeyYeliEntities", "urunal")]
        public virtual IQueryable<urunal_Result> urunal(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<urunal_Result>("[KuzeyYeliEntities].[urunal](@id)", idParameter);
        }
    
        public virtual int UrunlerEkle(Nullable<int> urunID, string urunad, Nullable<decimal> fiyat, Nullable<short> stok, Nullable<int> tedarikciID, Nullable<int> kategoriID, string birimdekiMiktar, Nullable<short> yeniSatis, Nullable<short> enazYenidenSatisMiktari, Nullable<bool> sonlandi)
        {
            var urunIDParameter = urunID.HasValue ?
                new ObjectParameter("UrunID", urunID) :
                new ObjectParameter("UrunID", typeof(int));
    
            var urunadParameter = urunad != null ?
                new ObjectParameter("urunad", urunad) :
                new ObjectParameter("urunad", typeof(string));
    
            var fiyatParameter = fiyat.HasValue ?
                new ObjectParameter("fiyat", fiyat) :
                new ObjectParameter("fiyat", typeof(decimal));
    
            var stokParameter = stok.HasValue ?
                new ObjectParameter("stok", stok) :
                new ObjectParameter("stok", typeof(short));
    
            var tedarikciIDParameter = tedarikciID.HasValue ?
                new ObjectParameter("tedarikciID", tedarikciID) :
                new ObjectParameter("tedarikciID", typeof(int));
    
            var kategoriIDParameter = kategoriID.HasValue ?
                new ObjectParameter("kategoriID", kategoriID) :
                new ObjectParameter("kategoriID", typeof(int));
    
            var birimdekiMiktarParameter = birimdekiMiktar != null ?
                new ObjectParameter("BirimdekiMiktar", birimdekiMiktar) :
                new ObjectParameter("BirimdekiMiktar", typeof(string));
    
            var yeniSatisParameter = yeniSatis.HasValue ?
                new ObjectParameter("YeniSatis", yeniSatis) :
                new ObjectParameter("YeniSatis", typeof(short));
    
            var enazYenidenSatisMiktariParameter = enazYenidenSatisMiktari.HasValue ?
                new ObjectParameter("EnazYenidenSatisMiktari", enazYenidenSatisMiktari) :
                new ObjectParameter("EnazYenidenSatisMiktari", typeof(short));
    
            var sonlandiParameter = sonlandi.HasValue ?
                new ObjectParameter("Sonlandi", sonlandi) :
                new ObjectParameter("Sonlandi", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UrunlerEkle", urunIDParameter, urunadParameter, fiyatParameter, stokParameter, tedarikciIDParameter, kategoriIDParameter, birimdekiMiktarParameter, yeniSatisParameter, enazYenidenSatisMiktariParameter, sonlandiParameter);
        }
    
        public virtual ObjectResult<UrunlerListele_Result> UrunlerListele()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UrunlerListele_Result>("UrunlerListele");
        }
    
        public virtual int UrunlerSil(Nullable<int> urunID)
        {
            var urunIDParameter = urunID.HasValue ?
                new ObjectParameter("UrunID", urunID) :
                new ObjectParameter("UrunID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UrunlerSil", urunIDParameter);
        }
    
        public virtual int UrunlerUpdate(Nullable<int> urunID, string urunad, Nullable<decimal> fiyat, Nullable<short> stok, Nullable<int> tedarikciID, Nullable<int> kategoriID, string birimdekiMiktar, Nullable<short> yeniSatis, Nullable<short> enazYenidenSatisMiktari, Nullable<bool> sonlandi)
        {
            var urunIDParameter = urunID.HasValue ?
                new ObjectParameter("UrunID", urunID) :
                new ObjectParameter("UrunID", typeof(int));
    
            var urunadParameter = urunad != null ?
                new ObjectParameter("urunad", urunad) :
                new ObjectParameter("urunad", typeof(string));
    
            var fiyatParameter = fiyat.HasValue ?
                new ObjectParameter("fiyat", fiyat) :
                new ObjectParameter("fiyat", typeof(decimal));
    
            var stokParameter = stok.HasValue ?
                new ObjectParameter("stok", stok) :
                new ObjectParameter("stok", typeof(short));
    
            var tedarikciIDParameter = tedarikciID.HasValue ?
                new ObjectParameter("tedarikciID", tedarikciID) :
                new ObjectParameter("tedarikciID", typeof(int));
    
            var kategoriIDParameter = kategoriID.HasValue ?
                new ObjectParameter("kategoriID", kategoriID) :
                new ObjectParameter("kategoriID", typeof(int));
    
            var birimdekiMiktarParameter = birimdekiMiktar != null ?
                new ObjectParameter("BirimdekiMiktar", birimdekiMiktar) :
                new ObjectParameter("BirimdekiMiktar", typeof(string));
    
            var yeniSatisParameter = yeniSatis.HasValue ?
                new ObjectParameter("YeniSatis", yeniSatis) :
                new ObjectParameter("YeniSatis", typeof(short));
    
            var enazYenidenSatisMiktariParameter = enazYenidenSatisMiktari.HasValue ?
                new ObjectParameter("EnazYenidenSatisMiktari", enazYenidenSatisMiktari) :
                new ObjectParameter("EnazYenidenSatisMiktari", typeof(short));
    
            var sonlandiParameter = sonlandi.HasValue ?
                new ObjectParameter("Sonlandi", sonlandi) :
                new ObjectParameter("Sonlandi", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UrunlerUpdate", urunIDParameter, urunadParameter, fiyatParameter, stokParameter, tedarikciIDParameter, kategoriIDParameter, birimdekiMiktarParameter, yeniSatisParameter, enazYenidenSatisMiktariParameter, sonlandiParameter);
        }
    
        public virtual int UrunStokArttir(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UrunStokArttir", idParameter);
        }
    
        public virtual int UrunveKategoriEkle(string urunad, string kategoriad, Nullable<decimal> fiyat, Nullable<short> stok)
        {
            var urunadParameter = urunad != null ?
                new ObjectParameter("urunad", urunad) :
                new ObjectParameter("urunad", typeof(string));
    
            var kategoriadParameter = kategoriad != null ?
                new ObjectParameter("kategoriad", kategoriad) :
                new ObjectParameter("kategoriad", typeof(string));
    
            var fiyatParameter = fiyat.HasValue ?
                new ObjectParameter("fiyat", fiyat) :
                new ObjectParameter("fiyat", typeof(decimal));
    
            var stokParameter = stok.HasValue ?
                new ObjectParameter("stok", stok) :
                new ObjectParameter("stok", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UrunveKategoriEkle", urunadParameter, kategoriadParameter, fiyatParameter, stokParameter);
        }
    }
}
